# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Dotnet Build $(buildConfiguration)'
  
# - task: DotNetCoreCLI@2
  # displayName: "Run Unit Tests"
  # inputs:
    # command: test
    # arguments: '--configuration $(buildConfiguration) --no-build'
    # projects: '**/*Tests/*.csproj'  

- task: DotNetCoreCLI@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  displayName: "Nuget pack SQSMessageDispatcher"
  inputs:
    command: 'pack'
    packagesToPack: '**/SQSMessageDispatcher.csproj'
    nobuild: true
    packDirectory: '$(Build.ArtifactStagingDirectory)'
    includesymbols: true
    versioningScheme: off
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: NuGetCommand@2
  displayName: "Nuget push to Nuget.org"
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org'
    verbosityPush: 'Normal'
    
# - task: GitHubRelease@1
  # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  # inputs:
    # gitHubConnection: 'github.com_marcioduarte89'
    # repositoryName: 'marcioduarte89/SQSMessageDispatcher'
    # action: 'create'
    # target: '$(Build.SourceVersion)'
    # tagSource: 'userSpecifiedTag'
    # tag: '0.1.0'
    # isPreRelease: true
    # changeLogCompareToRelease: 'lastFullRelease'
    # changeLogType: 'commitBased'